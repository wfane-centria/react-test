{"ast":null,"code":"var _jsxFileName = \"/Users/mobility/workspace/react/react-test/src/Table.jsx\";\nimport React, { useState } from 'react';\nimport { useResizeObserver } from \"Utils/hooks\";\nimport _ from 'lodash';\n\nconst sortData = (data, fields, sortOn, sortAscending) => {\n  if (!sortOn) {\n    return data;\n  }\n\n  const sortField = _.find(fields, {\n    name: sortOn\n  });\n\n  const sortFn = _.get(sortField, 'comparator');\n\n  const path = _.get(sortField, 'path', sortField);\n\n  let sortedData;\n\n  if (sortFn) {\n    sortedData = [...data].sort((a, b) => {\n      return sortFn(a, b);\n    });\n  } else {\n    sortedData = _.sortBy(data, item => {\n      const d = _.get(item, path);\n\n      if (typeof d === 'string') {\n        return d.toLowerCase();\n      }\n\n      return d;\n    });\n  }\n\n  if (!sortAscending) {\n    return sortedData.reverse();\n  }\n\n  return sortedData;\n};\n\nexport const HeaderField = props => {\n  const {\n    field,\n    handleSort,\n    sortOn,\n    sortAscending,\n    headerStyle,\n    width\n  } = props;\n  const hStyle = { ...headerStyle,\n    width: width\n  };\n\n  const sortable = _.get(field, 'sortable', false);\n\n  const style = _.get(field, 'style');\n\n  const name = _.get(field, 'name', typeof field === 'string' ? field : null);\n\n  return /*#__PURE__*/React.createElement(\"th\", {\n    role: \"columnheader\",\n    scope: \"col\",\n    id: name ? _.replace(name, ' ', '') : '',\n    className: `table--header-field${sortable ? ' sortable' : ''}${sortable && sortOn === name ? ' sorted' : ''}`,\n    style: headerStyle ? hStyle : style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: sortable ? () => {\n      handleSort(name);\n    } : null,\n    className: \"table--header-field--content\",\n    \"data-testid\": `header-field${_.isEmpty(name) ? '-controls' : '-' + _.lowerCase(name)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, name), sortable && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table--sort-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 30\n    }\n  }, sortOn === name && !sortAscending && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 59\n    }\n  }), sortOn === name && sortAscending && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 58\n    }\n  }), sortOn !== name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-both\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })))));\n};\nexport const HeaderRow = ({\n  fields,\n  handleSort,\n  sortOn,\n  sortAscending,\n  headerStyle\n}) => {\n  return /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    role: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, _.map(fields, field => /*#__PURE__*/React.createElement(HeaderField, {\n    field: field,\n    key: _.get(field, 'name', 'controls'),\n    handleSort: handleSort,\n    sortOn: sortOn,\n    sortAscending: sortAscending,\n    headerStyle: headerStyle,\n    width: _.get(field, 'width'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }))));\n};\nexport const AccessibilityRowHeader = ({\n  colHeader,\n  name,\n  data,\n  field\n}) => {\n  const DataComponent = _.get(field, 'component', null);\n\n  const style = _.get(field, \"style\");\n\n  return /*#__PURE__*/React.createElement(\"th\", {\n    role: \"rowheader\",\n    scope: \"row\",\n    headers: colHeader,\n    \"data-testid\": `rowheader${_.isEmpty(name) ? '' : '-' + _.lowerCase(name)}`,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"table--col-header\",\n    \"aria-hidden\": \"true\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, name), DataComponent ? /*#__PURE__*/React.createElement(DataComponent, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 30\n    }\n  }) : data);\n};\nexport const TableData = ({\n  rowId,\n  colHeader,\n  name,\n  data,\n  field\n}) => {\n  const DataComponent = _.get(field, 'component', null);\n\n  const style = _.get(field, \"style\");\n\n  return /*#__PURE__*/React.createElement(\"td\", {\n    role: \"cell\",\n    headers: `${_.isNil(rowId) ? '' : rowId} ${colHeader}`,\n    className: `table--data-field`,\n    \"data-testid\": `data-field${_.isEmpty(name) ? '-controls' : '-' + _.lowerCase(name)}`,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"table--col-header\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, name), DataComponent ? /*#__PURE__*/React.createElement(DataComponent, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 26\n    }\n  }) : data);\n};\nexport const DataField = props => {\n  const {\n    data,\n    field,\n    header,\n    rowId\n  } = props;\n\n  const name = _.get(field, 'name', typeof field === 'string' ? field : null);\n\n  const colHeader = name ? _.replace(name, ' ', '') : '';\n\n  if (header) {\n    return /*#__PURE__*/React.createElement(AccessibilityRowHeader, {\n      colHeader: colHeader,\n      data: data,\n      name: name,\n      field: field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(TableData, {\n    rowId: rowId,\n    colHeader: colHeader,\n    name: name,\n    data: data,\n    field: field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }\n  });\n};\nexport const DataRow = ({\n  highlights,\n  fields,\n  row,\n  rowHeaderField\n}) => {\n  let rowId;\n  const highlightClassNames = highlights.map(highlight => {\n    let val = _.get(row, highlight.field, \"\");\n\n    return val === highlight.condition ? highlight.className : \"\";\n  }).filter(cn => cn !== \"\").join(\" \");\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    role: \"row\",\n    className: `table--data-row ${highlightClassNames}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, _.map(fields, (field, columnIndex) => {\n    // This will use the first column value as the index for accessibility requirements when the table is in responsive mode.\n    if (rowHeaderField) {\n      rowId = _.get(row, rowHeaderField);\n    } else if (columnIndex === 0) {\n      let firstColumnValue = _.get(row, _.get(field, 'path', field), row);\n\n      if (typeof firstColumnValue !== 'object') {\n        rowId = firstColumnValue;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(DataField, {\n      key: columnIndex,\n      header: columnIndex === 0,\n      rowId: rowId,\n      data: _.get(row, _.get(field, 'path', field), row),\n      field: field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    });\n  }));\n};\nexport const Table = ({\n  config,\n  headerStyle,\n  miniWidth\n}) => {\n  const [sortOn, setSortOn] = useState(null);\n  const [sortAscending, setSortAscending] = useState(true);\n  const [ref, width] = useResizeObserver();\n\n  const handleSort = newSort => {\n    setSortOn(newSort);\n    setSortAscending(sortOn === newSort ? !sortAscending : sortAscending);\n  };\n\n  const fields = _.get(config, 'fields', []);\n\n  const data = sortData(_.get(config, 'data', []), fields, sortOn, sortAscending);\n\n  const highlights = _.get(config, 'highlights', []);\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    role: \"table\",\n    className: `table${width < (miniWidth || 700) ? ' mini' : ''}`,\n    ref: ref,\n    \"data-testid\": \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"Placeholder\"), /*#__PURE__*/React.createElement(HeaderRow, {\n    headerStyle: headerStyle,\n    fields: fields,\n    handleSort: handleSort,\n    sortOn: sortOn,\n    sortAscending: sortAscending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, _.map(data, (d, i) => /*#__PURE__*/React.createElement(DataRow, {\n    highlights: highlights,\n    key: i,\n    fields: fields,\n    row: d,\n    rowHeaderField: _.get(config, 'rowHeaderField'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 36\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/mobility/workspace/react/react-test/src/Table.jsx"],"names":["React","useState","useResizeObserver","_","sortData","data","fields","sortOn","sortAscending","sortField","find","name","sortFn","get","path","sortedData","sort","a","b","sortBy","item","d","toLowerCase","reverse","HeaderField","props","field","handleSort","headerStyle","width","hStyle","sortable","style","replace","isEmpty","lowerCase","HeaderRow","map","AccessibilityRowHeader","colHeader","DataComponent","TableData","rowId","isNil","DataField","header","DataRow","highlights","row","rowHeaderField","highlightClassNames","highlight","val","condition","className","filter","cn","join","columnIndex","firstColumnValue","Table","config","miniWidth","setSortOn","setSortAscending","ref","newSort","i"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useResizeObserver} from \"Utils/hooks\";\nimport _ from 'lodash';\n\nconst sortData = (data, fields, sortOn, sortAscending) => {\n    if (!sortOn) {\n        return data;\n    }\n\n    const sortField = _.find(fields, {name: sortOn});\n\n    const sortFn = _.get(sortField, 'comparator');\n\n    const path = _.get(sortField, 'path', sortField);\n\n    let sortedData;\n\n    if (sortFn) {\n        sortedData = [...data].sort((a, b) => {\n            return sortFn(a, b);\n        })\n    } else {\n        sortedData = _.sortBy(data, (item) => {\n            const d = _.get(item, path);\n            if (typeof d === 'string') {\n                return d.toLowerCase()\n            }\n\n            return d;\n        });\n    }\n\n    if (!sortAscending) {\n        return sortedData.reverse();\n    }\n\n    return sortedData;\n};\n\nexport const HeaderField = (props) => {\n    const {field, handleSort, sortOn, sortAscending, headerStyle, width} = props;\n    const hStyle = {...headerStyle, width: width};\n    const sortable = _.get(field, 'sortable', false);\n    const style = _.get(field, 'style');\n    const name = _.get(field, 'name', typeof field === 'string' ? field : null);\n\n    return (\n        <th\n            role=\"columnheader\"\n            scope=\"col\"\n            id={name ? _.replace(name, ' ', '') : ''}\n            className={`table--header-field${sortable ? ' sortable' : ''}${sortable && sortOn === name ? ' sorted' : ''}`}\n            style={headerStyle? hStyle: style}\n        >\n            <div\n                onClick={sortable ? () => {\n                    handleSort(name)\n                } : null}\n                className='table--header-field--content'\n                data-testid={`header-field${_.isEmpty(name) ? '-controls' : '-' + _.lowerCase(name)}`}\n            >\n                <span>{name}</span>\n                {sortable && <div className=\"table--sort-icons\">\n                    {sortOn === name && !sortAscending && <div className='arrow-down'/>}\n                    {sortOn === name && sortAscending && <div className='arrow-up'/>}\n                    {sortOn !== name && <div className=\"arrow-both\">\n                        <div className='arrow-up'/>\n                        <div className='arrow-down'/>\n                    </div>}\n                </div>}\n            </div>\n        </th>\n    )\n\n};\n\nexport const HeaderRow = ({fields, handleSort, sortOn, sortAscending, headerStyle}) => {\n\n    return (\n        <thead>\n        <tr role=\"row\">\n            {_.map(fields, field => <HeaderField\n                field={field}\n                key={_.get(field, 'name', 'controls')}\n                handleSort={handleSort}\n                sortOn={sortOn}\n                sortAscending={sortAscending}\n                headerStyle={headerStyle}\n                width={_.get(field, 'width')}\n            />)}\n        </tr>\n        </thead>\n    )\n};\n\nexport const AccessibilityRowHeader = ({colHeader, name, data, field }) => {\n    const DataComponent = _.get(field, 'component', null);\n    const style = _.get(field, \"style\");\n    return (\n        <th\n            role=\"rowheader\"\n            scope=\"row\"\n            headers={colHeader}\n            data-testid={`rowheader${_.isEmpty(name) ? '' : '-' + _.lowerCase(name)}`}\n            style={style}\n        >\n                <span className=\"table--col-header\" aria-hidden=\"true\" style={style}>\n                    {name}\n                </span>\n            {DataComponent ? <DataComponent data={data}/> : data}\n        </th>\n    )\n};\n\nexport const TableData = ({rowId, colHeader, name, data, field}) => {\n    const DataComponent = _.get(field, 'component', null);\n    const style = _.get(field, \"style\");\n    return (<td\n        role=\"cell\"\n        headers={`${_.isNil(rowId) ? '' : rowId} ${colHeader}`}\n        className={`table--data-field`}\n        data-testid={`data-field${_.isEmpty(name) ? '-controls' : '-' + _.lowerCase(name)}`}\n        style={style}\n    >\n            <span className=\"table--col-header\" aria-hidden=\"true\">\n                {name}\n            </span>\n        {DataComponent ? <DataComponent data={data}/> : data}\n    </td>)\n};\n\nexport const DataField = (props) => {\n    const {data, field, header, rowId} = props;\n    const name = _.get(field, 'name', typeof field === 'string' ? field : null);\n    const colHeader = name ? _.replace(name, ' ', '') : '';\n\n    if (header) {\n        return <AccessibilityRowHeader colHeader={colHeader} data={data} name={name} field={field} />\n    }\n\n    return <TableData rowId={rowId} colHeader={colHeader} name={name} data={data} field={field} />\n};\n\nexport const DataRow = ({highlights, fields, row, rowHeaderField}) => {\n    let rowId;\n\n    const highlightClassNames = highlights.map(highlight => {\n        let val = _.get(row, highlight.field, \"\");\n        return (val === highlight.condition) ? highlight.className : \"\";\n    })\n        .filter(cn => cn !== \"\")\n        .join(\" \");\n\n    return (\n        <tr role=\"row\" className={`table--data-row ${highlightClassNames}`} >\n            {_.map(fields, (field, columnIndex) => {\n                    // This will use the first column value as the index for accessibility requirements when the table is in responsive mode.\n                    if (rowHeaderField) {\n                        rowId = _.get(row, rowHeaderField)\n                    } else if (columnIndex === 0) {\n                        let firstColumnValue = _.get(row, _.get(field, 'path', field), row);\n                        if (typeof firstColumnValue !== 'object') {\n                            rowId = firstColumnValue;\n                        }\n                    }\n                    return (\n                        <DataField\n                            key={columnIndex}\n                            header={columnIndex === 0}\n                            rowId={rowId}\n                            data={_.get(row, _.get(field, 'path', field), row)}\n                            field={field}\n                        />)\n                }\n            )\n            }\n        </tr>\n    )\n};\n\nexport const Table = ({config, headerStyle, miniWidth}) => {\n\n    const [sortOn, setSortOn] = useState(null);\n    const [sortAscending, setSortAscending] = useState(true);\n    const [ref, width,] = useResizeObserver();\n\n    const handleSort = (newSort) => {\n        setSortOn(newSort);\n        setSortAscending(sortOn === newSort ? !sortAscending : sortAscending)\n    };\n\n    const fields = _.get(config, 'fields', []);\n    const data = sortData(_.get(config, 'data', []), fields, sortOn, sortAscending);\n    const highlights = _.get(config, 'highlights', []);\n\n    return (\n        <table role=\"table\" className={`table${width < (miniWidth || 700) ? ' mini' : ''}`} ref={ref} data-testid=\"table\">\n            <caption>Placeholder</caption>\n            <HeaderRow headerStyle={headerStyle} fields={fields} handleSort={handleSort} sortOn={sortOn} sortAscending={sortAscending}/>\n            <tbody>\n            {_.map(data, (d, i) => <DataRow highlights={highlights} key={i} fields={fields} row={d} rowHeaderField={_.get(config, 'rowHeaderField')}/>)}\n            </tbody>\n        </table>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}