{"ast":null,"code":"import _ from 'lodash';\nimport { useEffect, useState, useRef } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nexport const useResizeObserver = () => {\n  const ref = useRef();\n  const [width, setWidth] = useState(1);\n  const [height, setHeight] = useState(1);\n  useEffect(() => {\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(_.debounce(entries => {\n      const entry = _.head(entries);\n\n      if (!entry) {\n        return;\n      }\n\n      setWidth(entry.contentRect.width);\n      setHeight(entry.contentRect.height);\n    }, 50));\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n  return [ref, width, height];\n};","map":{"version":3,"sources":["/Users/mobility/workspace/react/react-test/src/Hooks.js"],"names":["_","useEffect","useState","useRef","ResizeObserver","useResizeObserver","ref","width","setWidth","height","setHeight","element","current","resizeObserver","debounce","entries","entry","head","contentRect","observe","unobserve"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,QAAMC,GAAG,GAAGH,MAAM,EAAlB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,OAAO,GAAGL,GAAG,CAACM,OAApB;AACA,UAAMC,cAAc,GAAG,IAAIT,cAAJ,CAAmBJ,CAAC,CAACc,QAAF,CAAWC,OAAO,IAAI;AAC5D,YAAMC,KAAK,GAAGhB,CAAC,CAACiB,IAAF,CAAOF,OAAP,CAAd;;AAEA,UAAI,CAACC,KAAL,EAAY;AACR;AACH;;AAEDR,MAAAA,QAAQ,CAACQ,KAAK,CAACE,WAAN,CAAkBX,KAAnB,CAAR;AACAG,MAAAA,SAAS,CAACM,KAAK,CAACE,WAAN,CAAkBT,MAAnB,CAAT;AACH,KATyC,EASvC,EATuC,CAAnB,CAAvB;AAWAI,IAAAA,cAAc,CAACM,OAAf,CAAuBR,OAAvB;AAEA,WAAO,MAAME,cAAc,CAACO,SAAf,CAAyBT,OAAzB,CAAb;AACH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAO,CAACL,GAAD,EAAMC,KAAN,EAAaE,MAAb,CAAP;AACH,CAxBM","sourcesContent":["import _ from 'lodash';\nimport { useEffect, useState, useRef } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const useResizeObserver = () => {\n    const ref = useRef();\n    const [width, setWidth] = useState(1);\n    const [height, setHeight] = useState(1);\n\n    useEffect(() => {\n        const element = ref.current;\n        const resizeObserver = new ResizeObserver(_.debounce(entries => {\n            const entry = _.head(entries);\n\n            if (!entry) {\n                return;\n            }\n\n            setWidth(entry.contentRect.width);\n            setHeight(entry.contentRect.height);\n        }, 50));\n\n        resizeObserver.observe(element);\n\n        return () => resizeObserver.unobserve(element);\n    }, []);\n\n    return [ref, width, height];\n};"]},"metadata":{},"sourceType":"module"}