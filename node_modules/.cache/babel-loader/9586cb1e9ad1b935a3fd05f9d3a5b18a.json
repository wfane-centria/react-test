{"ast":null,"code":"var _jsxFileName = \"/Users/mobility/workspace/react/react-test/src/MyCountryList.js\";\nimport React from 'react';\nimport * as CountryTable from './CountryTable';\nimport { bindActionCreators, createStore } from 'redux';\nimport * as countryAction from './actions/countryAction';\nimport { connect } from 'react-redux';\nimport axios from \"axios\";\nimport countryReducer from './reducers/countryReducer';\nexport class MyCountryList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(\"https://restcountries.eu/rest/v2/all\");\n    console.log(response.data);\n    this.setState({\n      countries: response.data\n    });\n  }\n\n  render() {\n    //console.log(this.state.countries);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"KKK\");\n  }\n\n} ////const store = createStore(countryReducer);\n//console.log(store.getState());\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: {\n      countryAction: bindActionCreators(countryAction, dispatch)\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCountryList); //export default CountryList;","map":{"version":3,"sources":["/Users/mobility/workspace/react/react-test/src/MyCountryList.js"],"names":["React","CountryTable","bindActionCreators","createStore","countryAction","connect","axios","countryReducer","MyCountryList","Component","constructor","props","state","countries","componentDidMount","response","get","console","log","data","setState","render","mapStateToProps","mapDispatchToProps","dispatch","actions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAMC,YAAb,MAAgC,gBAAhC;AACA,SAAQC,kBAAR,EAA4BC,WAA5B,QAA8C,OAA9C;AACA,OAAQ,KAAKC,aAAb,MAAgC,yBAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,OAAO,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;AAE/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAGD,QAAMC,iBAAN,GAA0B;AAEtB,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,sCAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACA,SAAKC,QAAL,CAAc;AAACP,MAAAA,SAAS,EAAEE,QAAQ,CAACI;AAArB,KAAd;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL;AACA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAMH;;AAxB8C,C,CA2BnD;AACA;;AAEA,MAAMC,eAAe,GAAIV,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC;AADd,GAAP;AAGH,CAJD;;AAMA,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,OAAO,EAAE;AACLrB,MAAAA,aAAa,EAAEF,kBAAkB,CAACE,aAAD,EAAgBoB,QAAhB;AAD5B;AADN,GAAP;AAKH,CAND;;AAQA,eAAenB,OAAO,CAACiB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4Cf,aAA5C,CAAf,C,CACA","sourcesContent":["import React from 'react';\nimport * as  CountryTable  from './CountryTable';\nimport {bindActionCreators, createStore} from 'redux';\nimport  * as countryAction from './actions/countryAction';\nimport {connect} from 'react-redux';\nimport axios from \"axios\";\nimport countryReducer from './reducers/countryReducer';\n\nexport class MyCountryList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            countries: []\n        }\n    }\n\n\n    async componentDidMount() {\n\n        const response = await axios.get(\"https://restcountries.eu/rest/v2/all\");\n        console.log(response.data);\n        this.setState({countries: response.data});\n    }\n    render() {\n        //console.log(this.state.countries);\n        return(\n\n            <div>\n                KKK\n            </div>\n        )\n    }\n}\n\n////const store = createStore(countryReducer);\n//console.log(store.getState());\n\nconst mapStateToProps = (state) => {\n    return {\n        countries: state.countries\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        actions: {\n            countryAction: bindActionCreators(countryAction, dispatch)\n        }\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MyCountryList);\n//export default CountryList;"]},"metadata":{},"sourceType":"module"}