{"ast":null,"code":"import _ from \"lodash\";\nexport const byProperty = (propNames, caseInsensitive) => {\n  return (a, b) => {\n    for (let i = 0; i < propNames.length; i++) {\n      let propName = propNames[i];\n      let valueA = caseInsensitive ? lc(a[propName]) : a[propName];\n      let valueB = caseInsensitive ? lc(b[propName]) : b[propName];\n      let comparison = compare(valueA, valueB);\n\n      if (comparison !== 0) {\n        return comparison;\n      }\n    }\n\n    return 0;\n  };\n};\n\nfunction lc(val) {\n  return val.toString().toLowerCase();\n}\n\nexport function compare(a, b) {\n  if (a < b) {\n    return -1;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n}\nexport const getRestError = (error, defaultMessage) => {\n  if (error.message) {\n    return error.message;\n  }\n\n  if (error.data && error.data.message) {\n    return error.data.message;\n  }\n\n  return defaultMessage;\n};\nexport const compoundSortComparator = sortFields => {\n  return (a, b) => {\n    for (let i = 0; i < sortFields.length; i++) {\n      let sortField = sortFields[i];\n\n      const valueA = _.get(a, sortField);\n\n      const valueB = _.get(b, sortField);\n\n      let comparison = compare(valueA, valueB);\n\n      if (comparison !== 0) {\n        return comparison;\n      }\n    }\n\n    return 0;\n  };\n};","map":{"version":3,"sources":["/Users/mobility/workspace/react/react-test/src/Utilities.js"],"names":["_","byProperty","propNames","caseInsensitive","a","b","i","length","propName","valueA","lc","valueB","comparison","compare","val","toString","toLowerCase","getRestError","error","defaultMessage","message","data","compoundSortComparator","sortFields","sortField","get"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,SAAD,EAAYC,eAAZ,KAAgC;AACxD,SAAO,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACK,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAIE,QAAQ,GAAGN,SAAS,CAACI,CAAD,CAAxB;AACA,UAAIG,MAAM,GAAGN,eAAe,GAAGO,EAAE,CAACN,CAAC,CAACI,QAAD,CAAF,CAAL,GAAqBJ,CAAC,CAACI,QAAD,CAAlD;AACA,UAAIG,MAAM,GAAGR,eAAe,GAAGO,EAAE,CAACL,CAAC,CAACG,QAAD,CAAF,CAAL,GAAqBH,CAAC,CAACG,QAAD,CAAlD;AAEA,UAAII,UAAU,GAAGC,OAAO,CAACJ,MAAD,EAASE,MAAT,CAAxB;;AACA,UAAIC,UAAU,KAAK,CAAnB,EAAsB;AACpB,eAAOA,UAAP;AACD;AACF;;AACD,WAAO,CAAP;AACD,GAZD;AAaD,CAdM;;AAgBP,SAASF,EAAT,CAAYI,GAAZ,EAAiB;AACf,SAAOA,GAAG,CAACC,QAAJ,GAAeC,WAAf,EAAP;AACD;;AAED,OAAO,SAASH,OAAT,CAAiBT,CAAjB,EAAoBC,CAApB,EAAuB;AAC5B,MAAID,CAAC,GAAGC,CAAR,EAAW;AACT,WAAO,CAAC,CAAR;AACD;;AACD,MAAID,CAAC,GAAGC,CAAR,EAAW;AACT,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AAED;AAED,OAAO,MAAMY,YAAY,GAAG,CAACC,KAAD,EAAQC,cAAR,KAA2B;AACrD,MAAID,KAAK,CAACE,OAAV,EAAmB;AACjB,WAAOF,KAAK,CAACE,OAAb;AACD;;AACD,MAAIF,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWD,OAA7B,EAAsC;AACpC,WAAOF,KAAK,CAACG,IAAN,CAAWD,OAAlB;AACD;;AACD,SAAOD,cAAP;AACD,CARM;AAUP,OAAO,MAAMG,sBAAsB,GAAIC,UAAD,IAAgB;AACpD,SAAO,CAACnB,CAAD,EAAIC,CAAJ,KAAU;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiB,UAAU,CAAChB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAIkB,SAAS,GAAGD,UAAU,CAACjB,CAAD,CAA1B;;AACA,YAAMG,MAAM,GAAGT,CAAC,CAACyB,GAAF,CAAMrB,CAAN,EAASoB,SAAT,CAAf;;AACA,YAAMb,MAAM,GAAGX,CAAC,CAACyB,GAAF,CAAMpB,CAAN,EAASmB,SAAT,CAAf;;AAEA,UAAIZ,UAAU,GAAGC,OAAO,CAACJ,MAAD,EAASE,MAAT,CAAxB;;AACA,UAAIC,UAAU,KAAK,CAAnB,EAAsB;AACpB,eAAOA,UAAP;AACD;AACF;;AACD,WAAO,CAAP;AACD,GAZD;AAaD,CAdM","sourcesContent":["import _ from \"lodash\";\n\nexport const byProperty = (propNames, caseInsensitive) => {\n  return (a, b) => {\n    for (let i = 0; i < propNames.length; i++) {\n      let propName = propNames[i];\n      let valueA = caseInsensitive ? lc(a[propName]) : a[propName];\n      let valueB = caseInsensitive ? lc(b[propName]) : b[propName];\n\n      let comparison = compare(valueA, valueB);\n      if (comparison !== 0) {\n        return comparison;\n      }\n    }\n    return 0;\n  }\n};\n\nfunction lc(val) {\n  return val.toString().toLowerCase();\n}\n\nexport function compare(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n\n}\n\nexport const getRestError = (error, defaultMessage) => {\n  if (error.message) {\n    return error.message;\n  }\n  if (error.data && error.data.message) {\n    return error.data.message;\n  }\n  return defaultMessage;\n};\n\nexport const compoundSortComparator = (sortFields) => {\n  return (a, b) => {\n    for (let i = 0; i < sortFields.length; i++) {\n      let sortField = sortFields[i];\n      const valueA = _.get(a, sortField);\n      const valueB = _.get(b, sortField);\n\n      let comparison = compare(valueA, valueB);\n      if (comparison !== 0) {\n        return comparison;\n      }\n    }\n    return 0;\n  }\n};"]},"metadata":{},"sourceType":"module"}